// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
// HOLOQ VFX STYLES - MODULAR CONSCIOUSNESS EFFECTS
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

// ═══════════════════════════════════════════════════════
// CONFIGURATION VARIABLES
// ═══════════════════════════════════════════════════════

// Default colors for effects
$vfx-hologram-color-1: cyan !default;
$vfx-hologram-color-2: #00aa00 !default;
$vfx-glitch-color-1: #ff0000 !default;
$vfx-glitch-color-2: #00aa00 !default;

// ═══════════════════════════════════════════════════════
// MIXINS FOR REUSABLE EFFECTS
// ═══════════════════════════════════════════════════════

// Apply hologram effect to any element
@mixin hologram-effect($animation1: 'hologram-1', $animation2: 'hologram-2', $data-attr: 'data-text') {
  position: relative;
  
  &::before,
  &::after {
    content: attr(#{$data-attr});
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  
  &::before {
    animation: #{$animation1} 0.8s ease-in-out infinite;
    color: $vfx-hologram-color-2;
    z-index: -1;
    opacity: 0.7;
  }
  
  &::after {
    animation: #{$animation2} 1.2s ease-in-out infinite;
    color: $vfx-hologram-color-1;
    z-index: -2;
    opacity: 0.5;
  }
}

// Apply frantic hologram (for ASCII art)
@mixin hologram-frantic($data-attr: 'data-pyramid') {
  position: relative;
  
  &::before,
  &::after {
    content: attr(#{$data-attr});
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    white-space: pre;
    font-size: inherit;
    line-height: inherit;
  }
  
  &::before {
    animation: hologram-ascii-1 0.3s linear infinite;
    color: $vfx-hologram-color-1;
    z-index: -1;
    opacity: 0.4;
    filter: blur(0.5px);
  }
  
  &::after {
    animation: hologram-ascii-2 0.5s linear infinite;
    color: $vfx-hologram-color-2;
    z-index: -2;
    opacity: 0.3;
    filter: blur(1px);
  }
}

// Apply glitch effect
@mixin glitch-effect($duration: 0.3s) {
  animation: glitch #{$duration} ease-in-out infinite;
}

// ═══════════════════════════════════════════════════════
// REUSABLE ANIMATION CLASSES
// ═══════════════════════════════════════════════════════

// Scrambling visual feedback
.scrambling {
  animation: data-corrupt 0.1s ease-in-out;
}

// Glitch text with shadow
.glitch-text {
  position: relative;
  
  &::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: $vfx-hologram-color-1;
    z-index: -1;
    opacity: 0;
    animation: glitch-flash 0.15s ease-in-out;
  }
}

// ═══════════════════════════════════════════════════════
// KEYFRAME ANIMATIONS
// ═══════════════════════════════════════════════════════

// Standard glitch effect
@keyframes glitch {
  0%, 100% { 
    text-shadow: 2px 0 $vfx-glitch-color-1, -2px 0 $vfx-glitch-color-2;
  }
  50% {
    text-shadow: -2px 0 $vfx-glitch-color-1, 2px 0 $vfx-glitch-color-2;
  }
}

// Data corruption effect
@keyframes data-corrupt {
  0%, 100% {
    filter: none;
  }
  25% {
    filter: hue-rotate(90deg) saturate(2);
  }
  50% {
    filter: hue-rotate(180deg) saturate(1.5);
  }
  75% {
    filter: hue-rotate(270deg) saturate(2);
  }
}

// Glitch flash for text
@keyframes glitch-flash {
  0%, 100% {
    opacity: 0;
    transform: translate(0, 0);
  }
  50% {
    opacity: 0.8;
    transform: translate(2px, -1px);
  }
}

// Smooth hologram animations for headers
@keyframes hologram-1 {
  0%, 100% {
    transform: translate(0px, 0px);
    opacity: 0.7;
  }
  25% {
    transform: translate(2px, -1px);
    opacity: 0.5;
  }
  50% {
    transform: translate(-1px, 1px);
    opacity: 0.8;
  }
  75% {
    transform: translate(1px, -2px);
    opacity: 0.6;
  }
}

@keyframes hologram-2 {
  0%, 100% {
    transform: translate(0px, 0px) scale(1.01);
    opacity: 0.5;
  }
  33% {
    transform: translate(-2px, 1px) scale(1.02);
    opacity: 0.3;
  }
  66% {
    transform: translate(1px, -1px) scale(1.01);
    opacity: 0.6;
  }
}

// Horizontal-only hologram animations (for h1)
@keyframes hologram-h1-1 {
  0%, 100% {
    transform: translateX(0px);
    opacity: 0.7;
  }
  25% {
    transform: translateX(3px);
    opacity: 0.5;
  }
  50% {
    transform: translateX(-2px);
    opacity: 0.8;
  }
  75% {
    transform: translateX(2px);
    opacity: 0.6;
  }
}

@keyframes hologram-h1-2 {
  0%, 100% {
    transform: translateX(0px) scaleX(1.02);
    opacity: 0.5;
  }
  33% {
    transform: translateX(-4px) scaleX(1.03);
    opacity: 0.3;
  }
  66% {
    transform: translateX(3px) scaleX(1.01);
    opacity: 0.6;
  }
}

// Frantic squarewave hologram animations for ASCII
@keyframes hologram-ascii-1 {
  0% { transform: translate(0.5px, -0.3px); opacity: 0.4; }
  10% { transform: translate(-0.3px, 0.5px); opacity: 0.35; }
  20% { transform: translate(0.3px, 0.3px); opacity: 0.45; }
  30% { transform: translate(-0.5px, -0.3px); opacity: 0.3; }
  40% { transform: translate(0.3px, -0.5px); opacity: 0.5; }
  50% { transform: translate(-0.3px, 0.3px); opacity: 0.35; }
  60% { transform: translate(0.5px, 0.5px); opacity: 0.4; }
  70% { transform: translate(-0.5px, -0.5px); opacity: 0.45; }
  80% { transform: translate(0.3px, -0.3px); opacity: 0.3; }
  90% { transform: translate(-0.3px, 0.5px); opacity: 0.5; }
  100% { transform: translate(0.5px, -0.3px); opacity: 0.4; }
}

@keyframes hologram-ascii-2 {
  0% { transform: translate(-0.3px, 0.3px) scale(1.002); opacity: 0.3; }
  8% { transform: translate(0.5px, -0.5px) scale(1.003); opacity: 0.25; }
  16% { transform: translate(-0.5px, -0.3px) scale(1.002); opacity: 0.35; }
  24% { transform: translate(0.3px, 0.5px) scale(1.004); opacity: 0.3; }
  32% { transform: translate(-0.3px, -0.5px) scale(1.002); opacity: 0.25; }
  40% { transform: translate(0.5px, 0.3px) scale(1.003); opacity: 0.35; }
  48% { transform: translate(-0.5px, 0.5px) scale(1.002); opacity: 0.3; }
  56% { transform: translate(0.3px, -0.3px) scale(1.004); opacity: 0.25; }
  64% { transform: translate(-0.3px, 0.3px) scale(1.002); opacity: 0.35; }
  72% { transform: translate(0.5px, -0.5px) scale(1.003); opacity: 0.3; }
  80% { transform: translate(-0.5px, 0.5px) scale(1.002); opacity: 0.25; }
  88% { transform: translate(0.3px, -0.3px) scale(1.004); opacity: 0.35; }
  100% { transform: translate(-0.3px, 0.3px) scale(1.002); opacity: 0.3; }
}

// ═══════════════════════════════════════════════════════
// UTILITY CLASSES FOR QUICK APPLICATION
// ═══════════════════════════════════════════════════════

// Apply hologram to any element with class
.hologram {
  @include hologram-effect();
}

.hologram-frantic {
  @include hologram-frantic();
}

.glitch {
  @include glitch-effect();
}

// MODE 2 (Schizo mode) automatic effects
body.schizo-mode {
  // Auto-apply effects to common elements
  .auto-hologram {
    @include hologram-effect();
  }
  
  .auto-hologram-frantic {
    @include hologram-frantic();
  }
  
  .auto-glitch {
    @include glitch-effect();
  }
}